"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∞–∫–∫–∞—É–Ω—Ç–∞
"""
from handlers.base_handler import BaseHandler
from services.news_service import news_service
from services.database_service import db_service
from services.trading_service import trading_service
from buttons import create_account_menu, create_back_button
from core.decorators import handle_errors

class NewsAndAccountHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"""
    
    def __init__(self):
        super().__init__()
        self.news_service = news_service
        self.db_service = db_service
        self.trading_service = trading_service
    
    def register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        
        @self.bot.callback_query_handler(func=lambda call: call.data == "news")
        @handle_errors("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π")
        def handle_news(call):
            user_id = self.get_user_id(call)
            message_id = self.get_message_id(call)
            
            self._send_news(user_id, message_id)
        
        @self.bot.callback_query_handler(func=lambda call: call.data == "account")
        @handle_errors("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ")
        def handle_account(call):
            user_id = self.get_user_id(call)
            message_id = self.get_message_id(call)
            
            self._send_account_info(user_id, message_id)
        
        @self.bot.callback_query_handler(func=lambda call: call.data == "back_to_account")
        @handle_errors("–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç")
        def handle_back_to_account(call):
            user_id = self.get_user_id(call)
            message_id = self.get_message_id(call)
            
            self._send_account_info(user_id, message_id)
        
        @self.bot.callback_query_handler(func=lambda call: call.data == "change_name")
        @handle_errors("–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏")
        def handle_change_name(call):
            user_id = self.get_user_id(call)
            message_id = self.get_message_id(call)
            
            self._start_name_change(user_id, message_id)
    
    @handle_errors("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π")
    def _send_news(self, user_id: int, message_id: int):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É —Ä—ã–Ω–∫–∞
            news = self.news_service.get_latest_crypto_news()
            market_summary = self.news_service.get_market_summary()
            
            full_news = f"{news}\n\n{market_summary}"
            
            self.edit_message_safely(
                user_id,
                message_id,
                full_news,
                create_back_button("menu")
            )
            
        except Exception as e:
            error_message = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {str(e)}"
            self.edit_message_safely(
                user_id,
                message_id,
                error_message,
                create_back_button("menu")
            )
    
    @handle_errors("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ")
    def _send_account_info(self, user_id: int, message_id: int):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_data = self.db_service.get(user_id)
            user_name = user_data.get("name", "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
            try:
                btc_balance, usdt_balance = self.trading_service.get_balance()
                balance_info = (
                    f"üí∞ –ë–∞–ª–∞–Ω—Å:\n"
                    f"‚Çø BTC: {btc_balance}\n"
                    f"üíµ USDT: {usdt_balance}"
                )
            except Exception as e:
                balance_info = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {str(e)}"
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–ª–µ—Ä—Ç–æ–≤
            price_alerts = self.db_service.get_user_alerts(user_id, "price_alerts")
            rsi_alerts = self.db_service.get_user_alerts(user_id, "rsi_alerts")
            
            account_message = (
                f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ\n\n"
                f"üÜî ID: {user_id}\n"
                f"üë§ –ò–º—è: {user_name}\n"
                f"üîî –¶–µ–Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤: {len(price_alerts)}\n"
                f"üìä RSI –∞–ª–µ—Ä—Ç–æ–≤: {len(rsi_alerts)}\n\n"
                f"{balance_info}"
            )
            
            self.edit_message_safely(
                user_id,
                message_id,
                account_message,
                create_account_menu()
            )
            
        except Exception as e:
            error_message = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ: {str(e)}"
            self.edit_message_safely(
                user_id,
                message_id,
                error_message,
                create_back_button("menu")
            )
    
    def _start_name_change(self, user_id: int, message_id: int):
        """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã –∏–º–µ–Ω–∏"""
        message_text = (
            "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:\n\n"
            "üí° –ò–º—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ"
        )
        
        self.edit_message_safely(
            user_id,
            message_id,
            message_text,
            create_back_button("account")
        )
        
        self.bot.register_next_step_handler_by_chat_id(
            user_id,
            self._process_name_change
        )
    
    @handle_errors("–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏")
    def _process_name_change(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏"""
        user_id = self.get_user_id(message)
        new_name = message.text.strip()
        
        if not new_name or len(new_name) > 50:
            error_message = "‚ö†Ô∏è –ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 1 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤"
            self.send_message_safely(
                user_id,
                error_message,
                create_back_button("account")
            )
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_data = self.db_service.get(user_id)
            user_data["name"] = new_name
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            success = self.db_service.save(user_id, user_data)
            
            if success:
                success_message = f"‚úÖ –ò–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {new_name}"
            else:
                success_message = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏"
            
            self.send_message_safely(
                user_id,
                success_message,
                create_back_button("account")
            )
            
        except Exception as e:
            error_message = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω–∏: {str(e)}"
            self.send_message_safely(
                user_id,
                error_message,
                create_back_button("account")
            )
